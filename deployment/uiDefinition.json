{
    "$schema": "https://schema.management.azure.com/schemas/0.1.2-preview/CreateUIDefinition.MultiVm.json#",
    "handler": "Microsoft.Azure.CreateUIDef",
    "version": "0.1.2-preview",
    "parameters": {
        "config": {
            "isWizard": true
        },
        "resourceTypes": [
            "Microsoft.KeyVault/vaults",
            "Microsoft.Web/serverfarms",
            "Microsoft.Storage/storageAccounts",
            "Microsoft.Web/sites",
            "Microsoft.DocumentDb/databaseAccounts"
        ],
        "basics": [
            {
                "name": "nameApiWeb",
                "type": "Microsoft.Solutions.ArmApiControl",
                "request": {
                    "method": "POST",
                    "path": "[concat(subscription().id,'/providers/Microsoft.Web/checkNameAvailability?api-version=2019-08-01')]",
                    "body": "[parse(concat('{\"name\":\"',basics('siteName'),'\",\"type\":\"Microsoft.Web/sites\"}',''))]"
                }
            },
            {
                "name": "nameApiWebBackend",
                "type": "Microsoft.Solutions.ArmApiControl",
                "request": {
                    "method": "POST",
                    "path": "[concat(subscription().id,'/providers/Microsoft.Web/checkNameAvailability?api-version=2019-08-01')]",
                    "body": "[parse(concat('{\"name\":\"',basics('siteName'),'-backend\",\"type\":\"Microsoft.Web/sites\"}',''))]"
                }
            },
            {
                "name": "nameApiKeyVault",
                "type": "Microsoft.Solutions.ArmApiControl",
                "request": {
                    "method": "POST",
                    "path": "[concat(subscription().id,'/providers/Microsoft.KeyVault/checkNameAvailability?api-version=2019-09-01')]",
                    "body": "[parse(concat('{\"name\":\"',basics('siteName'),'-keyvault\",\"type\":\"Microsoft.KeyVault/vaults\"}',''))]"
                }
            },
            {
                "name": "nameApiCosmos",
                "type": "Microsoft.Solutions.ArmApiControl",
                "request": {
                    "method": "POST",
                    "path": "[concat(subscription().id,'/providers/Microsoft.DocumentDb/checkNameAvailability?api-version=2021-01-15')]",
                    "body": "[parse(concat('{\"name\":\"',basics('siteName'),'-db\",\"type\":\"Microsoft.DocumentDb/databaseAccounts\"}',''))]"
                }
            },
            {
                "name": "siteName",
                "type": "Microsoft.Common.TextBox",
                "label": "Name of your deployment",
                "toolTip": "That is the name of the web portal (e.g.: my-kiri-portal - you can late access this site by using my-kiri-portal.azurewebsites.net).\nThe name should include 4-22 lower-case letters, digits or '-'. The '-' shouldn't be the first symbol.",
                "constraints": {
                    "required": true,
                    "regex": "^[a-z0-9]{1}[a-z0-9-]{3,21}$",
                    "validationMessage": "The name should include 4-22 letters, digits or '-'. The '-' shouldn't be the first symbol.",
                    "validations": [
                        {
                            "isValid": "[or(less(length(basics('siteName')),4),not(equals(basics('nameApiWeb').nameAvailable, false)))]",
                            "message": "Please use another name. The name is not available for a web site"
                        },
                        {
                            "isValid": "[or(less(length(basics('siteName')),4),not(equals(basics('nameApiWebBackend').nameAvailable, false)))]",
                            "message": "Please use another name. The name is not available for a function app"
                        },
                        {
                            "isValid": "[or(less(length(basics('siteName')),4),not(equals(basics('nameApiKeyVault').nameAvailable, false)))]",
                            "message": "Please use another name. The name is not available for a key vault"
                        }
                    ]
                }
            },
            {
                "name": "infoBoxSp",
                "type": "Microsoft.Common.InfoBox",
                "visible": true,
                "options": {
                    "icon": "Info",
                    "label": "Deployment Information",
                    "text": "[concat(basics('siteName'),'will be used as the prefix for the azure ressources.')] "
                }
            }
        ],
        "steps": [
            {
                "name": "ServicePrincipal",
                "label": "Service Principal",
                "elements": [
                    {
                        "name": "textSp",
                        "type": "Microsoft.Common.TextBlock",
                        "visible": true,
                        "options": {
                            "text": "[concat('A service principal is needed to authenticate to the managed tenants. Please create a service principal based on the documentation and enter the application id and secret. Optionally: Id and secret can be changed on the deployed Key Vault after the deployment. The redirect URI is \"https://',basics('siteName'),'.azurewebsites.net/signin-oidc\"')]",
                            "link": {
                                "label": "Learn more",
                                "uri": "[concat('https://github.com/schmm2/kiri-web')]"
                            }
                        }
                    },
                    {
                        "name": "spId",
                        "type": "Microsoft.Common.TextBox",
                        "label": "Application Id",
                        "toolTip": "The application id of the service principal must be in the format '00000000-0000-0000-0000-000000000000'",
                        "constraints": {
                            "required": true,
                            "regex": "^[{]?[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}[}]?$",
                            "validationMessage": "The application id of the service principal must be in the format '00000000-0000-0000-0000-000000000000'"
                        }
                    },
                    {
                        "name": "spSecret",
                        "type": "Microsoft.Common.PasswordBox",
                        "label": {
                            "password": "The secret of the service principal",
                            "confirmPassword": "Confirm secret"
                        },
                        "options": {
                            "hideConfirmation": false
                        },
                        "toolTip": "A secret string with a least one character",
                        "constraints": {
                            "required": true,
                            "validationMessage": "A secret string with a least one character"
                        }
                    },
                    {
                        "name": "infoBoxSp",
                        "type": "Microsoft.Common.InfoBox",
                        "visible": true,
                        "options": {
                            "icon": "Info",
                            "label": " XXX",
                            "text": "[concat('<b>Create the service principal with powershell in the Cloud Shell</b><br/><br/>Invoke-Command {<br/>$siteName=\"svc-kiri\"<br/>$ReplyUri=\"https://',basics('siteName'),'.azurewebsites.net/TenantVerification\"<br/>$RequiredGrants = [Microsoft.Open.AzureAD.Model.RequiredResourceAccess]::new(\"00000003-0000-0000-c000-000000000000\",@([Microsoft.Open.AzureAD.Model.ResourceAccess]::new(\"1138cb37-bd11-4084-a2b7-9f71582aeddb\", \"Role\"),[Microsoft.Open.AzureAD.Model.ResourceAccess]::new(\"78145de6-330d-4800-a6ce-494ff2d33d07\", \"Role\"),[Microsoft.Open.AzureAD.Model.ResourceAccess]::new(\"9241abd9-d0e6-425a-bd4f-47ba86e767a4\", \"Role\")))<br/><br/>Connect-AzureAD<br/><br/>$App=New-AzureADApplication -DisplayName $siteName -GroupMembershipClaims \"SecurityGroup\" -AvailableToOtherTenants $true -ReplyUrls $ReplyUri -RequiredResourceAccess $RequiredGrants<br/>$AppSecret = New-AzureADApplicationPasswordCredential -ObjectId $App.ObjectId -EndDate ([System.DateTime]::Now.AddYears(2).ToString(\"o\"))<br/>write-host \"--------------------------------------------------------------------------\"<br/>write-host \"Application Id:        $($app.AppId)\"<br/>write-host \"Secret:                $($AppSecret.Value)\"<br/>write-host \"--------------------------------------------------------------------------\"}','')]"
                        }
                    }
                ]
            },
            {
                "name": "tags",
                "label": "Tags",
                "elements": [
                    {
                        "name": "tagsByResource",
                        "type": "Microsoft.Common.TagsByResource",
                        "toolTip": "Add tags to the resources for governance reason",
                        "resources": [
                            "Microsoft.KeyVault/vaults",
                            "Microsoft.Web/serverfarms",
                            "Microsoft.Storage/storageAccounts",
                            "Microsoft.Web/sites"
                        ]
                    }
                ]
            }
        ],
        "outputs": {
            "spId": "[steps('ServicePrincipal').spId]",
            "spSecret": "[steps('ServicePrincipal').spSecret]",
            "siteName": "[basics('siteName')]",
            "tagsByResource": "[steps('tags').tagsByResource]"
        }
    }
}