{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "siteName": {
      "type": "string",
      "metadata": {
        "description": "The name of the app that you wish to create."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "tagsByResource": {
      "type": "object",
      "defaultValue": {

      }
    },
    "autoscaleMaxThroughput": {
      "type": "int",
      "defaultValue": 4000,
      "minValue": 4000,
      "maxValue": 1000000,
      "metadata": {
        "description": "Maximum throughput when using Autoscale Throughput Policy for the Database"
      }
    },
    "spIdWorker": {
      "defaultValue": "Service principal id",
      "type": "string"
    },
    "spSecretWorker": {
      "defaultValue": "",
      "type": "secureString"
    },
    "spIdApp": {
      "defaultValue": "",
      "type": "secureString"
    }
  },
  "variables": {
    "storageAccountName": "[concat('kiri', uniqueString(resourceGroup().id))]",
    "frontendAppName": "[concat(parameters('siteName'),'')]",
    "functionAppName": "[concat(parameters('siteName'),'-backend')]",
    "frontendASPName": "[concat(parameters('siteName'),'-aspfrontend')]",
    "functionASPName": "[concat(parameters('siteName'),'-aspbackend')]",
    "keyVaultName": "[concat(parameters('siteName'),'-keyvault')]",
    "cosmosName": "[concat(parameters('siteName'),'-db')]",
    "functionWorkerRuntime": "node",
    "storageAccountType": "Standard_LRS",
    "mongoDbName": "kiri"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[variables('storageAccountType')]"
      },
      "kind": "Storage"
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2020-06-01",
      "name": "[variables('functionASPName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic"
      },
      "properties": {
        "name": "[variables('functionASPName')]",
        "computeMode": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2020-06-01",
      "name": "[variables('functionAppName')]",
      "location": "[parameters('location')]",
      "kind": "functionapp",
      "identity": {
        "type": "SystemAssigned"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('functionASPName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.DocumentDb/databaseAccounts', variables('cosmosName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('functionASPName'))]",
        "clientAffinityEnabled": false,
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('functionAppName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~3"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "~14"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "[variables('functionWorkerRuntime')]"
            },
            {
              "name": "KEYVAULT_NAME",
              "value": "[variables('keyVaultName')]"
            },
            {
              "name": "mongodbConnectionString",
              "value": "[listConnectionStrings(resourceId('Microsoft.DocumentDB/databaseAccounts',variables('cosmosName')), '2020-04-01').connectionStrings[0].connectionString]"
            }
          ],
          "cors": {
            "allowedOrigins": [
              "*"
            ]
          },
          "use32BitWorkerProcess": true
        }
      },
      "resources": [
        {
          "name": "web",
          "type": "sourcecontrols",
          "apiVersion": "2020-06-01",
          "properties": {
            "RepoUrl": "https://github.com/schmm2/kiri-backend.git",
            "branch": "main",
            "IsManualIntegration": true
          },
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]"
          ]
        }
      ]
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2020-06-01",
      "name": "[variables('frontendASPName')]",
      "location": "[parameters('location')]",
      "tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.Web/serverfarms'), parameters('tagsByResource')['Microsoft.Web/serverfarms'], json('{}')) ]",
      "sku": {
        "name": "B2",
        "tier": "Basic"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2020-06-01",
      "name": "[variables('frontendAppName')]",
      "location": "[parameters('location')]",
      "kind": "app",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms',variables('frontendASPName'))]",
        "siteConfig": {
          "AlwaysOn": true,
          "appSettings": [
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "~14"
            },
            {
              "name": "SCM_COMMAND_IDLE_TIMEOUT",
              "value": "1200"
            },
            {
              "name": "REACT_APP_AUTHAPPID",
              "value": "[parameters('spIdApp')]"
            },
            {
              "name": "REACT_APP_BACKENDAPIURL",
              "value": "[concat('https://', reference(resourceId('Microsoft.Web/sites', variables('functionAppName')), '2020-06-01').defaultHostName,'/api')]"
            },
            {
              "name": "REACT_APP_FUNCTIONKEY",
              "value": "[listkeys(concat(resourceId('Microsoft.Web/sites', variables('functionAppName')), '/host/default'),'2020-06-01').functionKeys.default]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('frontendASPName'))]",
        "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]"
      ],
      "resources": [
        {
          "name": "web",
          "type": "sourcecontrols",
          "apiVersion": "2020-06-01",
          "location": "[parameters('location')]",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('frontendAppName'))]"
          ],
          "properties": {
            "RepoUrl": "https://github.com/schmm2/kiri-app.git",
            "branch": "main",
            "IsManualIntegration": true
          }
        }
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "name": "[variables('keyVaultName')]",
      "apiVersion": "2019-09-01",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "tenantId": "[subscription().tenantid]",
        "accessPolicies": [
          {
            "tenantId": "[subscription().tenantid]",
            "objectId": "[reference(resourceId('Microsoft.Web/sites', variables('functionAppName')),'2019-08-01', 'full').identity.principalId]",
            "permissions": {
              "secrets": [
                "get",
                "list",
                "set"
              ]
            }
          }
        ],
        "enabledForDeployment": false,
        "enabledForDiskEncryption": false,
        "enabledForTemplateDeployment": false,
        "enableSoftDelete": true,
        "softDeleteRetentionInDays": 90
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2019-09-01",
      "name": "[concat(variables('keyVaultName'), '/', parameters('spIdWorker'))]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
      ],
      "properties": {
        "value": "[parameters('spSecretWorker')]"
      }
    },
    {
      "apiVersion": "2020-04-01",
      "kind": "MongoDB",
      "type": "Microsoft.DocumentDb/databaseAccounts",
      "name": "[variables('cosmosName')]",
      "location": "[parameters('location')]",
      "properties": {
        "databaseAccountOfferType": "Standard",
        "locations": [
          {
            "id": "[concat(variables('cosmosName'), '-', parameters('location'))]",
            "failoverPriority": 0,
            "locationName": "[parameters('location')]"
          }
        ],
        "backupPolicy": {
          "type": "Periodic",
          "periodicModeProperties": {
            "backupIntervalInMinutes": 240,
            "backupRetentionIntervalInHours": 8,
            "backupStorageRedundancy": "Geo"
          }
        },
        "isVirtualNetworkFilterEnabled": false,
        "virtualNetworkRules": [],
        "ipRules": [],
        "dependsOn": [],
        "enableMultipleWriteLocations": false,
        "capabilities": [
          {
            "name": "EnableMongo"
          },
          {
            "name": "DisableRateLimitingResponses"
          }
        ],
        "apiProperties": {
          "serverVersion": "4.0"
        },
        "enableFreeTier": false
      },
      "tags": {}
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases",
      "name": "[concat(variables('cosmosName'), '/', variables('mongoDbName'))]",
      "apiVersion": "2021-01-15",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/', variables('cosmosName'))]"
      ],
      "properties": {
        "resource": {
          "id": "[variables('mongoDbName')]"
        },
        "options": {
          "autoscaleSettings": {
            "maxThroughput": "[parameters('autoscaleMaxThroughput')]"
          }
        }
      }
    }
  ]
}